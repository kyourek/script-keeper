using System;using System.IO;using System.Linq;using System.Web.Routing;using Keeper.OfScripts.Configuration;namespace Keeper.OfScripts{	public class StyleKeeper	{		private readonly IStyleGroup _Local;        private readonly IStyleGroup _Remote;		private readonly IStyleGroup _Embedded;		private readonly IStyleHelper _Helper;		public IStyleGroup Local { get { return _Local; } }        public IStyleGroup Remote { get { return _Remote; } }		public IStyleGroup Embedded { get { return _Embedded; } }		public IStyleHelper Helper { get { return _Helper; } }		public StyleKeeper(IStyleHelper styleHelper)		{			if (styleHelper == null) throw new ArgumentNullException("styleHelper");			_Helper = styleHelper;			_Local = new LocalStyleGroup { Name = "Local", Helper = _Helper.Local };            _Remote = new RemoteStyleGroup { Name = "Remote" };			_Embedded = new EmbeddedStyleGroup { Name = "Embedded" };		}		public string Render()		{            var str = Remote.Render();            str += Environment.NewLine + Local.Render();            str += Environment.NewLine + Embedded.Render();			return str;		}                public void Register(string alias)        {                        var source = KeeperConfig.Instance.Section                .Aliases                .Cast<ResourceAliasElement>()                .FirstOrDefault(a => a.Alias == alias);                        if (null == source) throw new ArgumentException("The alias '" + alias + "' does not exist in the configuration.");                        var residence = string.IsNullOrEmpty(source.Residence) ? Remote.Name : source.Residence;                        if (residence == Local.Name)                Local.Register(source.Source);            else                Remote.Register(source.Source);        }        	}}